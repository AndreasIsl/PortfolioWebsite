---
import BaseLayout from "./BaseLayout.astro";
const { frontmatter } = Astro.props;


---

<BaseLayout pageTitle={frontmatter.title}>

  <div class="titlecontainer">
    <h1>{frontmatter.title}</h1>
  </div>

  <div class="main-container">
    <div class="slideshow-container">
        {
          frontmatter.images.map((image) =>
            (
             <div class="sliderimage"><img src={image} draggable="false" tabindex="-1"/></div>
            )
          )
        }
  
    </div>
  </div>

  <div class="text-container">
    <p>{frontmatter.pubDate.slice(0, 10)}</p>
    <p><em>{frontmatter.description}</em></p>
    <slot />
  </div>
</div>
</BaseLayout>

<script>
  
  const slider = document.querySelector('.slideshow-container');
  let isDown = false;
  let startX;
  let scrollLeft;

  slider.addEventListener('mousedown', (e :MouseEvent) => {
    isDown = true;
    slider.classList.add('active'); // Add grabbing cursor
    startX = e.clientX;
    scrollLeft = slider.scrollLeft;
  });

  slider.addEventListener('mouseleave', () => {
    isDown = false;
    slider.classList.remove('active'); // Remove grabbing cursor
  });

  slider.addEventListener('mouseup', () => {
    isDown = false;
    slider.classList.remove('active'); // Remove grabbing cursor
  });

  slider.addEventListener('mousemove', (e:MouseEvent) => {
    if (!isDown) return; // Stop if the mouse is not pressed
    e.preventDefault();
    const x = e.clientX; // Get the current X position of the mouse
    const walk = (x - startX) * 3 ; // Multiply for scroll speed
    slider.scrollLeft = scrollLeft - walk;
  });
</script>


<style>

.titlecontainer{
  display: flex;
  margin: 50px;
  justify-content: center;
  align-items: center;
  background-color: linear-gradient(#eeb713, #3f3f3f);

}

.titlecontainer h1{
}
  


.main-container{
  margin: 100px;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Slideshow container */
.slideshow-container {
  display: flex;
  gap: 20px;
  width: 1000px;
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
  cursor: grab;
  scroll-behavior: smooth;
  scrollbar-width: none;   
}

@property --angle{
  syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}

.slideshow-container::after, .slideshow-container::before{
  content: '';
  position:absolute;
  height: 600px;
  width: 1000px;
  background-image: conic-gradient(from var(--angle), #eeb713, #3f3f3f,#eeb713,#3f3f3f);
  top: 62.5%;
  left: 50%;
  translate: -50% -50%;
  z-index: -1;
  padding: 3px;
  border-radius: 10px;
  animation: 3s spin linear infinite;
}

@keyframes spin{
  from{
    --angle:0deg;
  }
  to{
    --angle: 360deg;
  }

}

.slideshow-container::before{
  filter: blur(1.5rem);
  opacity: 0.5;
}



.sliderimage {
  scroll-snap-align: center;
  width:1000px;
  box-sizing: border-box;
  flex-shrink: 0;
  border-radius: 14px;
}

.sliderimage *{
  width:1000px;
  box-sizing: border-box;
  padding: 20px 30px;
  flex-shrink: 0;
  border-radius: 14px;
}

p{color: black;}
a{color: black;}


.text-container{
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;

}

.text-container *{
  max-width: 1000px;
}

slot{
  max-width: 1000px;

}


slot {
width: 500px;
  color: black;
}

</style>